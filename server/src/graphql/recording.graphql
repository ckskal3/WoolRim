type Recording {
  id: ID!
  path: String
  auth_flag: Status
  duration: String
  user: User
  poem: Poem
}

input CreateRecordingInput {
  path: String!
  user_id: ID!
  auth_flag: Boolean!
  duration: String!
  poem_id: ID!
}

enum Status {
  REJECTED
  ACCEPTED
  WAITING
}
type RecordingResult {
  item: Recording
  isSuccess: Boolean!
  msg: String
}

type Query {
  getRecording(id: ID!): Recording
  getAllRecording: [Recording]
}

type Mutation {
  createRecording(input: CreateRecordingInput!): RecordingResult!
  deleteRecording(id: ID!): RecordingResult!
}