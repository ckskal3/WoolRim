type Poem {
  id: ID!
  name: String!
  content: String!
  auth_count: Int!
  point: Int!
  length: Float!
  poet: Poet
}

input CreatePoemInput {
  name: String!
  poet_id: ID!
  content: String!
  point: Int!
  length: Float!
}

input UpdatePoemInput {
  id:ID!
  name: String
  poet_id: ID
  content: String
  point: Int
}

type PoemResult {
  isSuccess: Boolean!
  msg: String
}

type Query {
  getPoem(id: ID!): Poem
  getAllPoem: [Poem]
}

type Mutation {
  createPoem(input_list: [CreatePoemInput]!): PoemResult!
  updatePoem(input_list: [UpdatePoemInput]): PoemResult!
  deletePoem(id_list: [ID]!): PoemResult!
}